import*as U from"https://deno.land/std@0.183.0/fs/mod.ts";import*as I from"https://deno.land/std@0.183.0/path/mod.ts";import*as A from"https://deno.land/x/cliffy@v0.25.7/mod.ts";import*as i from"https://deno.land/std@0.183.0/semver/mod.ts";import*as x from"https://deno.land/std@0.183.0/semver/mod.ts";var E={denoLand:"deno_land",npmPackage:"npm_package",rawGitHub:"raw_github",unknown:"unknown"},m=E;var q=async function(o){let e=`https://registry.npmjs.org/${o}`,n=await fetch(e);if(!n.ok)return null;let r=JSON.parse(await n.text());return Object.keys(r.versions).map(a=>x.parse(a)).filter(a=>a!==null)},W=async function(o){let e=`https://apiland.deno.dev/v2/modules/${o}`,n=await fetch(e);return n.ok?JSON.parse(await n.text()).versions.map(a=>x.parse(a)).filter(a=>a!==null):null},z=async function(o,e){let n={Accept:"application/vnd.github+json","X-GitHub-Api-Version":"2022-11-28"};typeof e=="string"&&Object.defineProperty(n,"Authorization",{value:`Bearer ${e}`});let r=await fetch(`https://api.github.com/repos/${o}/releases`,{headers:n});return r.ok?JSON.parse(await r.text()).map(u=>x.parse(u.tag_name)).filter(u=>u!==null):null},B={[m.npmPackage]:q,[m.denoLand]:W,[m.rawGitHub]:z};var j=B;var T=new Map,X=async function(o,e,...n){let r=o+":"+e,t=T.get(r);if(typeof t!="undefined")return t;let a=await j[o](e,...n);return T.set(r,a),a},O=o=>o.reduce((e,n)=>i.gt(n,e)?n:e),K=async function(o,e){let n=o.version??"",r=i.parse(n)!==null;if(!(o.type in j))return null;let t=o.type,a=[];t==="raw_github"&&typeof(e==null?void 0:e.gitHubToken)=="string"&&a.push(e.gitHubToken);let u=await X(t,o.name,...a);if(u===null)return{fixed:r,outdated:"not_found",latest:null};e.usePrerelease||(u=u.filter(c=>c.prerelease.length===0));let y=u.filter(c=>i.satisfies(c,n,{includePrerelease:e.usePrerelease}));if(y.length<1)return{fixed:r,outdated:"not_found",latest:null};let v=O(y),h=u.filter(c=>i.gtr(c,n,{includePrerelease:e.usePrerelease})).filter(c=>{switch(e.level){case"major":return!0;case"minor":return i.major(v)===c.major;case"patch":return i.major(v)===c.major&&i.minor(v)===c.minor}}),g="none",p=null;return h.length>0&&(p=O(h),p.major>v.major?g="major":p.minor>v.minor?g="minor":p.patch>v.patch?g="patch":e.usePrerelease&&i.gt(p,v,{includePrerelease:!0})&&(g="pre_release")),{fixed:r,outdated:g,latest:(p==null?void 0:p.version)??null}},F=K;import*as V from"https://deno.land/std@0.183.0/fs/mod.ts";import*as C from"https://deno.land/std@0.183.0/path/mod.ts";var $=function(o){let e=o.lastIndexOf("@");return e<=0?[o,""]:[o.slice(0,e),o.slice(e+1)]};var k={test:/^https?:\/\/deno.land/,parse:o=>{let e=new URL(o).pathname.split("/").slice(1),n=e[0]==="x"?e[1]:e[0],[r,t]=$(n);return{type:m.denoLand,name:r,version:t}}},b={test:/^https?:\/\/raw.githubusercontent.com/,parse:o=>{let e=new URL(o).pathname.split("/").slice(1),n=`${e[0]}/${e[1]}`,r=e[2];return{type:m.rawGitHub,name:n,version:r}}},N={test:/^npm:/,parse:o=>{let[e,n]=$(o.slice(4));return{type:m.npmPackage,name:e,version:n}}},L=function(o,e){for(let n of e)if(n.test.test(o))return n.parse(o);return null};var G=function(o){let e=JSON.parse(o),n=[];for(let r in e.dependencies)n.push({type:m.npmPackage,name:r,version:e.dependencies[r]});for(let r in e.devDependencies)n.push({type:m.npmPackage,name:r,version:e.devDependencies[r]});return n},H=function(o,e){return L(o,e)??{type:m.unknown,name:o,version:null}},J=function(o,e){let n=JSON.parse(o);return[...Object.values((n==null?void 0:n.imports)??{}),...Object.values((n==null?void 0:n.scope)??{}).flatMap(t=>Object.values(t))].map(t=>H(t,e))},R=function(o,e){return[/"https?:\/\/[\w/:%#\$&\?\(\)~\.=\+\-@]+"/g,/'https?:\/\/[\w/:%#\$&\?\(\)~\.=\+\-@]+'/g,/`https?:\/\/[\w/:%#\$&\?\(\)~\.=\+\-@]+`/g,/"npm:[\w/:%#\$&\?\(\)~\.=\+\-@]+"/g,/'npm:[\w/:%#\$&\?\(\)~\.=\+\-@]+'/g,/`npm:[\w/:%#\$&\?\(\)~\.=\+\-@]+`/g].flatMap(t=>[...o.matchAll(t)]).map(t=>t[0].slice(1,-1)).map(t=>H(t,e))};var w=new Map,_=o=>{let e=w.get(o);return typeof e=="boolean"?e:V.existsSync(C.join(o,"deno.json"),{isFile:!0})||V.existsSync(C.join(o,"deno.jsonc"),{isFile:!0})?(w.set(o,!0),!0):(w.set(o,!1),!1)},Z={file:"package.json",resolver:o=>G(o)},ee={file:"import_map.json",enabled:_,resolver:o=>J(o,[k,b,N])},oe={file:"deps.ts",enabled:_,resolver:o=>R(o,[k,b,N])},ne={file:"**/deps.js",enabled:_,resolver:o=>R(o,[k,b,N])},S=[Z,ee,oe,ne];var se=async function*(o,e){for(let n of e)for await(let r of U.expandGlob(I.resolve(o,n)))r.isFile&&(yield[r.path,n])},re=async function(){let o=new A.Command().name("deps-scanner-js").description("Dependency scanner for Node.js and Deno project").option("-l, --level [level:string]","version update limit",{default:"major"}).option("--prerelease","use prerelease").arguments("[path]"),{options:e}=await o.parse(Deno.args),n=typeof e.level=="string"?e.level.toLowerCase():e.level;n!=="major"&&n!=="minor"&&n!=="patch"&&(console.error(`${n} is not a valid level.`),Deno.exit(1));let r=n,t=e.prerelease===!0,a=Deno.cwd(),u=[];for(let s of S)(s.enabled===void 0||s.enabled(a))&&u.push(s.file);let y=new Map;for await(let[s,l]of se(a,u)){console.log(`Scanning ${s}...`);let M=await Deno.readTextFile(s);for(let d of S)d.file===l&&d.resolver(M).forEach(f=>{y.set(`${f.type}-${f.name}`,f)})}let v=[...y.values()],h=[];for(let s of v){let l=await F(s,{level:r,usePrerelease:t});l===null?console.log(`\u2754${s.name} cannot be resolved (${s.type})`):l.outdated==="not_found"?console.log(`\u2754 ${s.name} not found on remote (${s.type})`):l.outdated==="none"?l.fixed?console.log(`\u2705 ${s.name} is up to date`):console.log(`\u26A0\uFE0F ${s.name} may up to date (version not fixed)`):l.fixed?console.log(`\u274C ${s.name} is outdated (${l.outdated})`):console.log(`\u274C ${s.name} is outdated (${l.outdated}) and version is not fixed`),l!==null&&h.push([s,l])}let g=h.filter(([,s])=>s.outdated!=="none"&&s.outdated!=="not_found"),p=h.filter(([s,l])=>l.outdated==="not_found"),c=h.filter(([s,l])=>!l.fixed);if(console.log(),console.log(`\x1B[1m${g.length}\x1B[0m module${g.length>1?"s are":" is"} outdated.`),p.length>0&&(console.log("Could not find following modules:"),console.log("  "+p.map(([s])=>s.name).join(", "))),c.length>0&&(console.log("Version not fixed at following modules:"),console.log("  "+c.map(([s])=>s.name).join(", "))),g.length>0){let s=[["","package","current","latest"]],l={major:"\x1B[31mMajor\x1B[0m",minor:"\x1B[33mMinor\x1B[0m",patch:"\x1B[34mPatch\x1B[0m",pre_release:"\x1B[36mPre\x1B[0m",none:"Latest",not_found:"Not Found"};for(let[d,f]of g)s.push([`${l[f.outdated]}`,d.name,d.version??"(null)",f.latest??"(null)"]);let M=new Array(s[0].length).fill(0).map((d,f)=>s.reduce((P,D)=>D[f].length>P?D[f].length:P,0));s=s.map(d=>d.map((f,P)=>`${f}${" ".repeat(M[P])}`.slice(0,M[P]))),M[0]=5,s[0][0]="     ",console.log(s[0].join(" ")),console.log(M.map(d=>"-".repeat(d)).join(" ")),console.log(s.slice(1).map(d=>d.join(" ")).join(`
`))}};re();
